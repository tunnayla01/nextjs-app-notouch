version: 2.1

jobs:
  test:
    docker:
      - image: cypress/included:15.4.0  # Cypress with dependencies
    working_directory: ~/project
    steps:
      - checkout

      # Restore cached node_modules
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

      # Install project dependencies
      - run:
          name: Install Dependencies
          command: npm install

      # Save node_modules cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      # Build the Next.js app
      - run:
          name: Build Next.js App
          command: npm run build

      # Start Next.js server in background for Cypress
      - run:
          name: Start Next.js server
          command: npm run start &

      # Wait for the server to be ready
      - run:
          name: Wait for server
          command: npx wait-on http://localhost:3000

      # Run Cypress tests headlessly
      - run:
          name: Run Cypress E2E Tests
          command: npx cypress run --headless --browser chrome

  deploy:
    docker:
      - image: cimg/base:2024.01
    working_directory: ~/project
    steps:
      - add_ssh_keys:
          fingerprints:
            # Add your Lightsail SSH key fingerprint here
            # - "MD5:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx"
      - run:
          name: Add server to known hosts
          command: ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
      - run:
          name: Deploy Next.js App to Lightsail
          command: >
            ssh $SERVER_USER@$SERVER_HOST "
              APP_DIR='/var/www/nextjs-app-notouch';
              GIT_REPO='git@github.com:tunnayla01/nextjs-app-notouch.git';

              if [ -d \"\$APP_DIR/.git\" ]; then
                echo '--- Pulling latest changes ---';
                cd \$APP_DIR &&
                git reset --hard &&
                git pull origin main &&
                npm install &&
                npm run build &&
                pm2 reload nextjs-app;
              else
                echo '--- First-time deployment ---';
                git clone \$GIT_REPO \$APP_DIR &&
                cd \$APP_DIR &&
                npm install &&
                npm run build &&
                pm2 start ecosystem.config.js --env production &&
                pm2 save;
              fi

              echo '--- Deployment successful ---';
            "

workflows:
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main

